title,url,time_added,tags,status,content
NationStates | create your own country,https://www.nationstates.net/,1539083976,,unread,"NATION

PASSWORD

Login
Stay logged in
 
PASSWORD

Login
Stay logged in
 PASSWORD

Login
Stay logged in
 
Login
Stay logged in
 Login
Stay logged in
 Latest Forum Topics Advertisement  9,616,269 nations served!
NationStates is a nation simulation game. Create a nation
according to your political ideals and care for its people. Or deliberately oppress them.
It's up to you.
Create a Nation
See the World
How to Play
Sign In
Privacy Policy • Terms & Conditions
 Create a Nation
See the World
How to Play
Sign In
Privacy Policy • Terms & Conditions
 Privacy Policy • Terms & Conditions
"
"Scratch - Imagine, Program, Share",https://scratch.mit.edu/,1633964235,bimbi,unread,Your browser has Javascript disabled. Please go to your browser preferences and enable Javascript in order to use Scratch.
Typing Practice,https://www.keybr.com/,1696519193,lifehacks,unread,
AutoHotkey,https://autohotkey.com/,1539961272,,unread,
Tate,https://www.tate.org.uk/,1634915202,,unread,"Tate Modern A celebration of the career of artist Leigh Bowery A major exhibition celebrating the monumental art of Emily Kam Kngwarray A major exhibition celebrating the monumental art of Emily Kam Kngwarray The first major exhibition of surrealist Ithell Colquhoun The first major exhibition of surrealist Ithell Colquhoun Enter the captivating world of leading contemporary artist Do Ho Suh Enter the captivating world of leading contemporary artist Do Ho Suh Explore the enigmatic world of Edward Burra Explore the enigmatic world of Edward Burra Free admission Free admission Free admission Free admission Free admission Free admission Ticket or membership card required Ticket or membership card required Shopping with Tate helps supports our galleries Your donation could provide art materials for young people or help an artwork in need of conservation From £7.50 a month, Members enjoy free exhibition entry at all our galleries with no need to book Learn skills from casting to weaving, with art activities for adults and kids Listen to the human stories behind art Discover our titles on art history, artists, and our award-winning children's books Shop art-inspired gifts for all ages and tastes Browse from over 1,000 artworks from Tate's collection, to enjoy your favourite art from our galleries in your home 
                                                            This site is protected by reCAPTCHA and the Google
                                                            Privacy Policy and
                                                            Terms of Service apply.
                                                         Tate’s privacy policy"
The web framework for perfectionists with deadlines | Django,https://www.djangoproject.com/,1638449702,python,unread,"The web framework for perfectionists with deadlines. 
Django makes it easier to build better web apps more quickly and with less code.
 
Get started with Django
 
      Django is a high-level Python web framework that encourages rapid development and clean, pragmatic design. Built by experienced developers, it takes care of much of the hassle of web development, so you can focus on writing your app without needing to reinvent the wheel. It’s free and open source.
     Django was designed to help developers take applications from concept to completion as quickly as possible. Django takes security seriously and helps developers avoid many common security mistakes. Some of the busiest sites on the web leverage Django’s ability to quickly and flexibly scale. A complete API development workflow from Django backend to frontend clients using Django REST Framework, drf-spectacular for OpenAPI spec generation, and automated client generation with openapi-generator. The DSF Board and Django Fellowship Working Group are pleased to introduce Jacob Tyler Walls as our new Django Fellow. © 2005-2025
         Django Software
          Foundation and individual contributors. Django is a
        registered
          trademark of the Django Software Foundation.
      "
LibriVox | free public domain audiobooks,https://librivox.org/,1634914811,,unread,"Read by volunteers from around the world. LibriVox audiobooks are read by volunteers from all over the world. Perhaps you would like to join us? LibriVox audiobooks are free for anyone to listen to, on their computers, iPods or other mobile device, or to burn onto a CD.  Various Complete | Solo | English  Warwick Deeping (1877 - 1950) Complete | Collaborative | English  Elizabeth Barrett Browning (1806 - 1861) Complete | Poetry_weekly | English  Mrs. Howard Taylor (1862 - 1949) Complete | Solo | English  Harold L. Goodwin (1914 - 1990) Complete | Solo | English  George Bernard Shaw (1856 - 1950) Complete | Dramatic | English  John Balderston (1889 - 1954) Complete | Dramatic | English  A. Ferdinand Hérold (1865 - 1940) Complete | Solo | English  Various Complete | Collaborative | English  W. H. Fawcett (1885 - 1940) Complete | Collaborative | English Posted on July 29, 2025 Listen to LibriVox Community Podcast #160 – Social Connection Brainstorm with the LibriVox Community. Hosted by CarrieMaeStreb. Duration: 17:11 Contributors: CarrieMaeStreb, PeterWhy, Stagewalker, cavaet, marisad6, ShrimpPhish 00:00 – Introduction00:17 – Social Connection Discussion01:18 – PeterWhy’s Contribution02:46 – Stagewalker’s Contribution07:50 – cavaet’s Contribution09:15 – marisad6’s Contribution11:47 – CarrieMaeStreb’s Contribution12:16 – Jim Mowatt Clip from the 52nd […] Posted on July 5, 2025 Listen to LibriVox Community Podcast #159 – Firsts vs Lasts. Hosted by jpercival. Duration: 17:53 Contributors: jpercival, shrimpphish, adrianstephens, clairemaestreb, redrun 00:00 – Introduction00:24 – Clip from the first LibriVox Community Podcast Sept 14, 200601:14 – Booting the Swarmers and forum updates01:40 – Statistics and Libriversaries02:46 – LibriVox Featured Volunteer: Adrian Stephens08:28 – Archive Diving: […] Posted on June 7, 2025 Listen to LibriVox Community Podcast #158 – To Poem or Not to Poem: That Is the Question. Hosted by jpercival. Duration: 23:24 With contributions from ShrimpPhish, Rapunzelina, redrun, and cavaet. 00:00 – Introduction00:25 – To Be or Not To Be by William Blake – Read by Craig Campbell02:01 – Website and Forum Updates and New […] Posted on May 2, 2025 Listen to LibriVox Community Podcast #157 – Clean-Up Month Kick Off. Hosted by Jpercival. Duration: 22:56 With contributions from Jpercival, ShrimpPhish, redrun, sparkleberry17, Rapunzelina, and adrianstephens. 00:00 – Introduction00:22 – LibriVox in May – redrun01:28 – May They All Get Into The Catalogue01:51 – Statistics and Libriversaries02:47 – Archive Diving – 2007 March Madness, 2009 […] (For users in the European Union or Switzerland, please read this note.)"
arXiv.org e-Print archive,https://arxiv.org/,1674049065,,unread,"Help | Advanced Search arXiv is a free distribution service and an open-access archive for nearly 2.4 million
      scholarly articles in the fields of physics, mathematics, computer science, quantitative biology, quantitative finance, statistics, electrical engineering and systems science, and economics.
      Materials on this site are not peer-reviewed by arXiv.
      
arXiv Operational Status 
                    Get status notifications via
                    email
                    or slack
"
Open Source Workflow Software & Business Process Management BPM,https://www.processmaker.com/,1509444109,dam,unread,"ProcessMaker is an easy to use Business Process Automation (BPA) and workflow software solution. Design, run, report, and improve your business processes. ProcessMaker Platform  Process Intelligence  Agentic AI  Free Trial Get started with free process documentation, a free process modeler and orchestration across your entire organization. Transfer Credit Evaluation Streamline the transfer student experience with AI agents that scan inbound transcripts, preapprove and update equivalencies, and recommend optimized degree paths. Grant Radar Match faculty with the right funding opportunities and seamlessly track grant proposal development progress. Financial Aid Accelerate student financial aid access and drive enrollment with a seamless, streamlined experience. Automation for Higher Education Attract, enroll, and retain students by transforming how your institution manages transfer credit, funding, and grants. Platform Spring 2025 Release Reach far beyond traditional business process management with our latest major platform release. Agentic AI at ProcessMaker The emergence of Agentic AI that acts with autonomy, intent, and context is redefining Business Process Automation. Process Intelligence Guide Process intelligence can remove bottlenecks, improve operational efficiency, and guide business process redesign. Intelligent Automation Guide Get ProcessMaker's Intelligent Automation Guide as we dig deep into the topic of intelligent automation, going through key topics, examples, and best practices to help executives understand and make use of the opportunity. ProcessMaker Partner Program Explore a range of partnership programs that allow you to integrate, white label, consult on or resell our  offerings to meet your customers' needs and grow your practice. Join our Partner Community Find the membership that best suits your business strategy and growth goals. Support & Services Offering a full spectrum of training, support and service experts and programs  to ensure your teams succeed and you achieve  valued return on your investment. Success Stories Millions of users worldwide use ProcessMaker to rapidly design and deploy workflow solutions. 
Request a Demo
Free Trial
 Join the 3 million users worldwide who are seeing their team’s productivity skyrocket through the discovery, automation, and scaling of their processes with ProcessMaker.
 Join the 3 million users worldwide who are seeing their team’s productivity skyrocket through the discovery, automation, and scaling of their processes with ProcessMaker. 
Request a Demo
Free Trial
 Drive all of your workflows using our flagship end-to-end automation offering. Combine user tasks, automated steps, and AI to create easy-to-use experiences for all users within your organization. Explore ProcessMaker Platform Gain end-to-end visibility and complete transparency for all work-intensive processes automatically. Discover and prioritize data-backed automation opportunities to remove or reduce manual work out of your processes. Explore Process Intelligence Move beyond AI hype and drive real productivity. Use ProcessMaker's suite of AI tools to build autonomous workflows faster. Work smarter, reduce manual effort, and deliver real impact without burdening your teams. Explore Agentic AI Boost student enrollment and maximize your team’s performance with ProcessMaker’s AI-Powered Transfer Credit Evaluation solution. Automate the entire credit evaluation process, from data collection to validating and decision-making, in order to deliver faster, more accurate results for transfer students. Explore TCE SolutionExplore Higher Ed Solutions ProcessMaker has been named the winner of a Silver Stevie® Award in the second annual Stevie Awards for Technology Excellence. Read More Improve your customer experience by automating and perfecting the workflows and processes that matter the most.  Read more Data Quality Automation ensures your data remains accurate, consistent, and reliable at scale. Read more ProcessMaker has been named to The Software Report's prestigious ""Top Business Processes Companies"" list. Read more More than 3 million users worldwide use ProcessMaker business process management solutions to rapidly design and deploy solutions to complex workflow problems. See how these organizations harness automation to achieve rapid increases in productivity.  CUNY School of Law digitally transformed its Admissions Office and Human Resources workflows using ProcessMaker, resulting in greater transparency, accountability, and cost savings. Explore AFN deployed ProcessMaker’s Process Intelligence and during the first phase worked with ProcessMaker to undergo a detailed four-week pilot analysis. Explore The challenge at Evans Console was the inefficiencies and complexities in the custom manufacturing process, which led to long lead times and delays in project turnaround. Explore With powerhouse automated workflows, Kaiser Permanente gains full control and visibility into four of their most critical business processes. Explore Needing to stay competitive in the market, GTBank adopts the ProcessMaker workflow platform. Today, ProcessMaker is the most widely used application at GTBank. Explore Don't just take our word for it. See what makes ProcessMaker users so happy. I find the UI easy to navigate, and as a functional person can create, alter, and replicate workflows with few dependencies on my developers. The folks that work at ProcessMaker are top-notch - everyone in support, engineering, engagement, and even Brian himself, I could not ask for better partners in this automation journey. Certified Product Manager The customer support and ease of use makes this a great platform! The scripting capability makes the product almost limitless. We are pushing more and more processes out that are used on a daily basis. After a couple of years, our campus is now very familiar with the name ProcessMaker and the general consensus is that ProcessMaker is a fantastic tool and allows us to easily and quickly stand up simple processes. Certified Assistant Director of Enterprise Applications Processmaker is simple to use and lets us create simple workflows in a couple of days, even in few hours. At the same time, it has powerful capabilities that let us create enterprise-grade applications with systems integration. Certified Director Enterprise Applications Development Discover how leading organizations utilize ProcessMaker to streamline their operations through process automation. Request a Demo Request a Demo "
Hypertext Style: Cool URIs don't change.,https://www.w3.org/Provider/Style/URI,1650628910,,unread,"  There are no reasons at all in theory for people to change URIs (or stop
maintaining documents), but millions of reasons in practice. In theory, the domain name space owner owns the domain name space and
therefore all URIs in it. Except insolvency, nothing prevents the domain name
owner from keeping the name. And in theory the URI space under your domain
name is totally under your control, so you can make it as stable as you like.
Pretty much the only good reason for a document to disappear from the Web is
that the company which owned the domain name went out of business or can no
longer afford to keep the server running. Then why are there so many dangling
links in the world? Part of it is just lack of forethought. Here are some
reasons you hear out there: Do you really feel that the old URIs cannot be kept running? If so, you
chose them very badly. Think of your new ones so that you will be able to
keep then running after the next redesign. That I can sympathize with - the W3C went through a period like that, when
we had to carefully sift archival material for confidentiality before making
the archives public. The solution is forethought - make sure you capture with
every document its acceptable distribution, its creation date and ideally its
expiry date. Keep this metadata. This is one of the lamest excuses. A lot of people don't know that servers
such as Apache give you a lot of control over a flexible relationship between
the URI of an object and where a file which represents it actually is in a
file system. Think of the URI space as an abstract space, perfectly
organized. Then, make a mapping onto whatever reality you actually use to
implement it. Then, tell your server. You can even write bits of your server
to make it just right. John doesn't maintain that file any more, Jane does. Whatever was that URI doing with John's name in it? It was in his
directory? I see. There is a crazy notion that pages produced by scripts have to be located
in a ""cgibin"" or ""cgi"" area. This is exposing the mechanism of how you run
your server. You change the mechanism (even keeping the content the same )
and whoops - all your URIs change. For example, take the National Science Foundation: NSF Online Documents
http://www.nsf.gov/cgi-bin/pubsys/browser/odbrowse.pl the main page for starting to look for documents, is clearly not going to
be something to trust to being there in a few years. ""cgi-bin"" and
""oldbrowse"" and "".pl"" all point to bits of how-we-do-it-now. By contrast, if
you use the page to find a document, you get first an equally bad Report of Working Group on Cryptology and Coding Theory
http://www.nsf.gov/cgi-bin/getpub?nsf9814 for the document's index page, but the html document itself by contrast is
very much better: http://www.nsf.gov/pubs/1998/nsf9814/nsf9814.htm Looking at this one, the ""pubs/1998"" header is going to give any future
archive service a good clue that the old 1998 document classification scheme
is in progress. Though in 2098 the document numbers might look different, I
can imagine this URI still being valid, and the NSF or whatever carries on
the archive not being at all embarrassed about it. This is the probably one of the worst side-effects of the URN discussions.
Some seem to think that because there is research about namespaces which will
be more persistent, that they can be as lax about dangling links as they like
as ""URNs will fix all that"". If you are one of these folks, then allow me to
disillusion you. Most URN schemes I have seen look something like an authority ID followed
by either a date and a string you choose, or just a string you choose. This
looks very like an HTTP URI. In other words, if you think your organization
will be capable of creating URNs which will last, then prove it by doing it
now and using them for your HTTP URIs. There is nothing about HTTP which
makes your URIs unstable. It is your organization. Make a database which maps
document URN to current filename, and let the web server use that to actually
retrieve files. If you have gotten to this point, then unless you have the time and money
and contacts to get some software design done, then you might claim the next
excuse: Now here is one I can sympathize with. I agree entirely. What you need to
do is to have the web server look up a persistent URI in an instant and
return the file, wherever your current crazy file system has it stored away
at the moment. You would like to be able to store the URI in the file as a
check, and constantly keep the database in tune with actuality. You'd like to
store the relationships between different versions and translations of the
same document, and you'd like to keep an independent record of the checksum
to provide a guard against file corruption by accidental error. And web
servers just don't come out of the box with these features. When you want to
create a new document, your editor asks you for a URI instead of telling
you. You need to be able to change things like ownership, access, archive level
security level, and so on, of a document in the URI space without changing
the URI. Too bad. But we'll get there. At W3C we use Jigedit functionality
(Jigsaw server used for editing) which does track versions, and we
are experimenting with document creation scripts. If you make tools, servers
and clients, take note! This is an outstanding reason, which applies for example to many W3C pages
including this one: so do what I say, not what I do. When you change a URI on your server, you can never completely tell who
will have links to the old URI. They might have made links from regular web
pages. They might have bookmarked your page. They might have scrawled the URI
in the margin of a letter to a friend. When someone follows a link and it breaks, they generally lose confidence
in the owner of the server. They also are frustrated - emotionally and
practically from accomplishing their goal. Enough people complain all the time about dangling links that I hope the
damage is obvious. I hope it also obvious that the reputation damage is to
the maintainer of the server whose document vanished. It is the the duty of a Webmaster to allocate URIs which you will be able
to stand by in 2 years, in 20 years, in 200 years. This needs thought, and
organization, and commitment. URIs change when there is some information in them which changes. It is
critical how you design them. (What, design a URI? I have to design URIs?
Yes, you have to think about it.). Designing mostly means leaving information
out. The creation date of the document - the date the URI is issued - is one
thing which will not change. It is very useful for separating requests which
use a new system from those which use an old system. That is one thing with
which it is good to start a URI. If a document is in any way dated, even
though it will be of interest for generations, then the date is a good
starter. The only exception is a page which is deliberately a ""latest"" page for,
for example, the whole organization or a large part of it. http://www.pathfinder.com/money/moneydaily/latest/ is the latest ""Money daily"" column in ""Money"" magazine. The main reason
for not needing the date in this URI is that there is no reason for the
persistence of the URI to outlast the magazine. The concept of ""today's
Money"" vanishes if Money goes out of production. If you want to
link to the content, you would link to it where it appears separately in the
archives as http://www.pathfinder.com/money/moneydaily/1998/981212.moneyonline.html (Looks good. Assumes that ""money"" will mean the same thing throughout the
life of pathfinder.com. There is a duplication of ""98"" and an "".html"" you
don't need but otherwise this looks like a strong URI). Everything! After the creation date, putting any information in the name
is asking for trouble one way or another.  So a better example from our site is simply http://www.w3.org/1998/12/01/chairs a report of the minutes of a meeting of W3C chair people. I'll go into this danger in more detail as it is one of the more difficult
things to avoid. Typically, topics end up in URIs when you classify your
documents according to a breakdown of the work you are doing. That breakdown
will change. Names for areas will change. At W3C we wanted to change ""MarkUp""
to ""Markup"" and then to ""HTML"" to reflect the actual content of the section.
Also, beware that this is often a flat name space. In 100 years are you sure
you won't want to reuse anything? We wanted to reuse ""History"" and
""Stylesheets"" for example in our short life. This is a tempting way of organizing a web site - and indeed a tempting
way of organizing anything, including the whole web. It is a great medium
term solution but has serious drawbacks in the long term Part of the reasons for this lie in the philosophy of meaning. every term
in the language it a potential clustering subject, and each person can have a
different idea of what it means. Because the relationships between subjects
are web-like rather than tree-like, even for people who agree on a web may
pick a different tree representation. These are my (oft repeated) general
comments on the dangers of hierarchical classification as a general
solution. Effectively, when you use a topic name in a URI you are binding yourself
to some classification. You may in the future prefer a different one. Then,
the URI will be liable to break. A reason for using a topic area as part of the URI is that responsibility
for sub-parts of a URI space is typically delegated, and then you need a name
for the organizational body - the subdivision or group or whatever - which
has responsibility for that sub-space. This is binding your URIs to the
organizational structure. It is typically safe only when protected by a date
further up the URI (to the left of it): 1998/pics can be taken to mean for
your server ""what we meant in 1998 by pics"", rather than ""what in 1998
we did with what we now refer to as pics."" Remember that this applies not only to the ""path"" part of a URI but to the
server name. If you have separate servers for some of your stuff, remember
that that division will be impossible to change without destroying many many
links. Some classic ""look what software we are using today"" domain names are
""cgi.pathfinder.com"", ""secure"", ""lists.w3.org"". They are made to make
administration of the servers easier. Whether it represents divisions in your
company, or document status, or access level, or security level, be very,
very careful before using more than one domain name for more than one type of
document. remember that you can hide many web servers inside one apparent web
server using redirection and proxying. Oh, and do think about your domain name. If your name is not soap, will
you want to be referred to as ""soap.com"" even when you have switched your
product line to something else. (With apologies to whoever owns soap.com at
the moment). Keeping URIs so that they will still be around in 2, 20 or 200 or even
2000 years is clearly not as simple as it sounds. However, all over the Web,
webmasters are making decisions which will make it really difficult for
themselves in the future. Often, this is because they are using tools whose
task is seen as to present the best site in the moment, and no one has
evaluated what will happen to the links when things change. The message here
is, however, that many, many things can change and your URIs can and should
stay the same. They only can if you think about how you design them. See also:  ...from my URIs in a practical file-based web server? If you are using, for example, Apache, you can set it up to do content
negotiation. You keep the file extension (such as .png) on the file (e.g.
mydog.png), but refer to the web resource without it. Apache
then checks the directory for all files with that name and any extension, and
it can also pick the best one out of a set (e.g. GIF and PNG). (You do
not have to put different types of file in different directories, in
fact the content negotiation won't work if you do.) References which do have the extension on will still work but will not
allow your server to select the best of currently available and future
formats. (In fact, mydog, mydog.png and
mydog.gif are each valid web resources. mydog is
content-type-generic. mydog.png and mydog.gif are
content-type-specific.) Of course, if you are building your own server, then using a database to
relate persistent identifiers to their current  form is a very clean idea --
though beware the unbounded growth of your database. During 1999, http://www.whdh.com/stormforce/closings.shtml
was a page I found documenting school closings due to snow. An alternative to
waiting for them to scroll past the bottom of the TV screen! I put a pointer
to it from my home page. Come the first big storm of 2000, and I check the
page. It says, ""Closings as of .
  There are currently no closings in effect. Please check back when the
  weather warrants"" Can't be such a big storm.  Funny the date is missing. But then if I go to
the home page of the site, there is a big button ""school closings"" which
takes me to http://www.whdh.com/stormforce/ which has a list of
many closed schools. Well, maybe they changed the system which got the closings from the
definitive list - but they did not need to change the URI. One of the smarts which came with a growing dependency on the web was that
applications could have built-in links back to the manufacturer's web site.
This has been used and abused to a great extent, but - you do have to keep
the URL the same.  Just the other day  I tried a link from Microsoft's
Netmeeting 2/something client under a menu ""Help/Microsoft on the Web/Free
stuff""  and got an Error 404 - not found response from the server.  They have
probably fixed it by now...  Historical note: At the end of the 20th century when this was written,
""cool"" was an epithet of approval particularly among young, indicating
trendiness, quality, or appropriateness. In the rush to stake our DNS
territory involved the choice of domain name and URI path were sometimes
directed more toward apparent ""coolness"" than toward usefulness or longevity.
This note is an attempt to redirect the energy behind the quest for
coolness."
